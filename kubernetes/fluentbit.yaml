# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0
---
# Fluentbit Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentbit
  namespace: otel-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fluentbit
  template:
    metadata:
      labels:
        app: fluentbit
    spec:
      containers:
        - name: fluentbit
          image: fluent/fluent-bit:latest
          ports:
            - containerPort: 24224
          volumeMounts:
            - name: config-volume
              mountPath: /fluent-bit/etc/fluent-bit.conf
              subPath: fluent-bit.conf
            - name: config-volume
              mountPath: /fluent-bit/etc/parsers.conf
              subPath: parsers.conf
      volumes:
        - name: config-volume
          configMap:
            name: fluentbit-config
---
# Fluentbit Service
apiVersion: v1
kind: Service
metadata:
  name: fluentbit-service
  namespace: otel-demo
spec:
  selector:
    app: fluentbit
  ports:
    - protocol: TCP
      port: 24224
      targetPort: 24224
---
# Fluentbit Config-Map
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentbit-config
  namespace: otel-demo
data:
  fluent-bit.conf: |
    [SERVICE]
        Parsers_File parsers.conf
        Log_Level info
        Daemon off
    [INPUT]
        Name forward
        Port 24224
    [FILTER]
        Name parser
        Match nginx.access
        Key_Name log
        Parser nginx
    [FILTER]
        Name    lua
        Match   nginx.access
        code    function cb_filter(a,b,c)local d={}local e=os.date("!%Y-%m-%dT%H:%M:%S.000Z")d["observerTime"]=e;d["body"]=c.remote.." "..c.host.." "..c.user.." ["..os.date("%d/%b/%Y:%H:%M:%S %z").."] \""..c.method.." "..c.path.." HTTP/1.1\" "..c.code.." "..c.size.." \""..c.referer.."\" \""..c.agent.."\""d["trace_id"]="102981ABCD2901"d["span_id"]="abcdef1010"d["attributes"]={}d["attributes"]["data_stream"]={}d["attributes"]["data_stream"]["dataset"]="nginx.access"d["attributes"]["data_stream"]["namespace"]="production"d["attributes"]["data_stream"]["type"]="logs"d["event"]={}d["event"]["category"]={"web"}d["event"]["name"]="access"d["event"]["domain"]="nginx.access"d["event"]["kind"]="event"d["event"]["result"]="success"d["event"]["type"]={"access"}d["http"]={}d["http"]["request"]={}d["http"]["request"]["method"]=c.method;d["http"]["response"]={}d["http"]["response"]["bytes"]=tonumber(c.size)d["http"]["response"]["status_code"]=c.code;d["http"]["flavor"]="1.1"d["http"]["url"]=c.path;d["communication"]={}d["communication"]["source"]={}d["communication"]["source"]["address"]="127.0.0.1"d["communication"]["source"]["ip"]=c.remote;return 1,b,d end
        call    cb_filter
    [OUTPUT]
        Name  opensearch
        Match nginx.*
        Host  opensearch-cluster-leader
        Port  9200
        tls   On
        tls.verify Off
        HTTP_Passwd     {USR}
        HTTP_User       {PSWD}
        Index sso_logs-nginx-prod
        Generate_ID On
        Retry_Limit False
        Suppress_Type_Name On
    [OUTPUT]
        Name stdout
        Match nginx.access
  parsers.conf: |
    [PARSER]
        Name   nginx
        Format regex
        Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

